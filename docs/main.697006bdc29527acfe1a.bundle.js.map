{"version":3,"file":"main.697006bdc29527acfe1a.bundle.js","sources":["webpack:///./packages/base/src/ComponentComposer/index.js"],"sourcesContent":["import React from 'react';\nimport { ErrorBoundary } from '..';\nimport { isWrappedWithStyles } from '../helpers';\n\nexport default function ComponentComposer(WrappedComponent) {\n  return class IIBComponent extends WrappedComponent {\n    static propTypes = {\n      ...WrappedComponent.propTypes,\n    };\n\n    static displayName = `ComponentComposer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    getInstance() {\n      return this.innerRef || this;\n    }\n\n    render() {\n      const visible = this.props.visible !== undefined ? this.props.visible : this.props.isVisible;\n      if (visible || visible === undefined) {\n        if (isWrappedWithStyles(WrappedComponent)) {\n          const innerComp = super.render();\n          const newProps = {\n            ref: r => {\n              this.innerRef = r;\n            },\n          };\n          this.comp = React.cloneElement(innerComp, newProps);\n        } else {\n          this.innerRef = null;\n          this.comp = super.render();\n        }\n        return <ErrorBoundary>{this.comp}</ErrorBoundary>;\n      }\n      return null;\n    }\n  };\n}\n"],"mappings":"AAIA","sourceRoot":""}